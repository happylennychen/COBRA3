<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon" 
             x:Class="O2Micro.Cobra.Shell.App" StartupUri="MainWindow.xaml" ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <ResourceDictionary>
            <ControlTemplate x:Key="RibbonButtonControlTemplate" TargetType="{x:Type Custom:RibbonButton}">
                <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="True">
                    <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}">
                        <StackPanel x:Name="StackPanel">
                            <Image x:Name="PART_Image" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="32" Margin="{DynamicResource {ComponentResourceKey ResourceId=LargeImageMargin, TypeInTargetAssembly={x:Type Custom:Ribbon}}}" Source="{TemplateBinding LargeImageSource}" VerticalAlignment="Center" Width="32"/>
                            <Grid x:Name="Grid" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                <Custom:RibbonTwoLineText x:Name="TwoLineText" HorizontalAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="13" Margin="1,5,1,0" TextAlignment="Center" Text="{TemplateBinding Label}" VerticalAlignment="Top" VerticalContentAlignment="Center"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                </Border>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Self}}" Value="Large">
                        <Setter Property="MinWidth" Value="44"/>
                        <Setter Property="Height" Value="66"/>
                        <Setter Property="MinHeight" TargetName="Grid" Value="26"/>
                        <Setter Property="Custom:RibbonTwoLineText.HasTwoLines" TargetName="TwoLineText" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Self}}" Value="Small">
                        <Setter Property="Height" Value="22"/>
                        <Setter Property="Margin" TargetName="PART_Image" Value="1,0"/>
                        <Setter Property="Source" TargetName="PART_Image" Value="{Binding SmallImageSource, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="Width" TargetName="PART_Image" Value="16"/>
                        <Setter Property="Height" TargetName="PART_Image" Value="16"/>
                        <Setter Property="HorizontalAlignment" TargetName="TwoLineText" Value="Left"/>
                        <Setter Property="Margin" TargetName="TwoLineText" Value="1"/>
                        <Setter Property="Orientation" TargetName="StackPanel" Value="Horizontal"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Self}}" Value="Small"/>
                            <Condition Binding="{Binding IsInQuickAccessToolBar, RelativeSource={RelativeSource Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Height" Value="Auto"/>
                    </MultiDataTrigger>
                    <DataTrigger Binding="{Binding ControlSizeDefinition.IsLabelVisible, RelativeSource={RelativeSource Self}}" Value="False">
                        <Setter Property="Visibility" TargetName="TwoLineText" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Self}}" Value="Collapsed">
                        <Setter Property="Visibility" TargetName="PART_Image" Value="Collapsed"/>
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="OuterBorder" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" TargetName="OuterBorder" Value="{Binding FocusedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{Binding FocusedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="OuterBorder" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="IsInControlGroup" Value="True">
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter Property="BorderThickness" TargetName="OuterBorder" Value="0,0,1,0"/>
                        <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                        <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" TargetName="PART_Image" Value="0.5"/>
                        <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding HighContrast}" Value="True">
                        <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                        <Setter Property="Background" TargetName="OuterBorder" Value="Transparent"/>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                        <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                        <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                        <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                        <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                        <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                        <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                        <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                        <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsInControlGroup, RelativeSource={RelativeSource Self}}" Value="True"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                            <Condition Binding="{Binding HighContrast}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </MultiDataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
             <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/O2Micro.Cobra.Resource;component/Styles/O2Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>  
        </ResourceDictionary>
    </Application.Resources>
</Application>
